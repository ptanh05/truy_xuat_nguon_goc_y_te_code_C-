@page
@model LoginModel
@{
    ViewData["Title"] = "Đăng Nhập";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <i class="fas fa-pills fa-3x text-primary mb-3"></i>
                        <h2>PharmaDNA</h2>
                        <p class="text-muted">Hệ Thống Truy Xuất Nguồn Gốc Thuốc</p>
                    </div>

                    <div id="loginForm">
                        <p class="text-center mb-4">Kết nối ví Web3 của bạn để đăng nhập</p>
                        
                        <button type="button" class="btn btn-primary btn-lg w-100 mb-3" id="connectWalletBtn">
                            <i class="fas fa-wallet"></i> Kết Nối MetaMask
                        </button>

                        <div id="walletInfo" style="display: none;" class="alert alert-info">
                            <p><strong>Ví:</strong> <code id="walletAddress"></code></p>
                            <p><strong>Vai Trò:</strong> <span id="userRole"></span></p>
                        </div>

                        <button type="button" class="btn btn-success btn-lg w-100" id="signInBtn" style="display: none;">
                            <i class="fas fa-sign-in-alt"></i> Ký Và Đăng Nhập
                        </button>

                        <div id="loginStatus" class="alert mt-3" style="display: none;"></div>
                    </div>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-body">
                    <h5 class="card-title">Hướng Dẫn Đăng Nhập</h5>
                    <ol class="small">
                        <li>Cài đặt MetaMask hoặc ví Web3 khác</li>
                        <li>Nhấp "Kết Nối MetaMask"</li>
                        <li>Chọn tài khoản ví của bạn</li>
                        <li>Ký message để xác minh</li>
                        <li>Bạn sẽ được chuyển hướng đến dashboard</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let connectedAccount = null;

        document.getElementById('connectWalletBtn').addEventListener('click', async () => {
            try {
                const account = await pharmaDNAWeb3.connectWallet();
                if (account) {
                    await pharmaDNAWeb3.switchToPharmaDNANetwork();
                    connectedAccount = account;
                    
                    document.getElementById('walletAddress').textContent = account;
                    document.getElementById('walletInfo').style.display = 'block';
                    document.getElementById('signInBtn').style.display = 'block';
                    document.getElementById('connectWalletBtn').style.display = 'none';
                    
                    // Get user role from blockchain
                    try {
                        const role = await getBlockchainRole(account);
                        const roleNames = ['None', 'Manufacturer', 'Distributor', 'Pharmacy', 'Admin'];
                        document.getElementById('userRole').textContent = roleNames[role] || 'Unknown';
                    } catch (error) {
                        console.error('Error getting role:', error);
                    }
                }
            } catch (error) {
                console.error('Error connecting wallet:', error);
                showLoginStatus('Lỗi kết nối ví', 'danger');
            }
        });

        document.getElementById('signInBtn').addEventListener('click', async () => {
            try {
                showLoginStatus('Đang ký message...', 'info');
                
                const message = `Đăng nhập vào PharmaDNA\n\nĐịa chỉ: ${connectedAccount}\nThời gian: ${new Date().toISOString()}`;
                const signature = await pharmaDNAWeb3.signMessage(message);
                
                if (signature) {
                    showLoginStatus('Đang xác minh chữ ký...', 'info');
                    
                    const response = await fetch('/api/auth/verify-signature', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            message: message,
                            signature: signature,
                            address: connectedAccount
                        })
                    });

                    const result = await response.json();
                    
                    if (result.success) {
                        showLoginStatus('Đăng nhập thành công! Chuyển hướng...', 'success');
                        setTimeout(() => {
                            window.location.href = '/dashboard';
                        }, 1500);
                    } else {
                        showLoginStatus('Lỗi xác minh: ' + result.message, 'danger');
                    }
                }
            } catch (error) {
                console.error('Error signing in:', error);
                showLoginStatus('Lỗi đăng nhập: ' + error.message, 'danger');
            }
        });

        function showLoginStatus(message, type) {
            const statusDiv = document.getElementById('loginStatus');
            statusDiv.className = `alert alert-${type}`;
            statusDiv.textContent = message;
            statusDiv.style.display = 'block';
        }

        async function getBlockchainRole(address) {
            // This would call the blockchain to get the user's role
            // For now, return a placeholder
            return 1; // Manufacturer
        }
    </script>
}
