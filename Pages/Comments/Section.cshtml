@page
@model CommentsSectionModel
@{
    ViewData["Title"] = "Comments & Notes";
}

<div class="container-fluid py-4">
    <ul class="nav nav-tabs mb-4" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" data-bs-toggle="tab" href="#comments">Comments</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-bs-toggle="tab" href="#notes">Notes</a>
        </li>
    </ul>

    <div class="tab-content">
        <!-- Comments Tab -->
        <div id="comments" class="tab-pane fade show active">
            <div class="row">
                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Add Comment</h5>
                        </div>
                        <div class="card-body">
                            <textarea class="form-control mb-2" id="commentContent" rows="3" placeholder="Write a comment..."></textarea>
                            <button class="btn btn-primary" onclick="addComment()">Post Comment</button>
                        </div>
                    </div>

                    <div id="commentsList"></div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header bg-info text-white">
                            <h5 class="mb-0">Comment Stats</h5>
                        </div>
                        <div class="card-body">
                            <p>Total Comments: <strong id="totalComments">0</strong></p>
                            <p>Recent Activity: <strong id="recentActivity">None</strong></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Notes Tab -->
        <div id="notes" class="tab-pane fade">
            <div class="row">
                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">Add Note</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <label class="form-label">Title</label>
                                <input type="text" class="form-control" id="noteTitle" placeholder="Note title">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Content</label>
                                <textarea class="form-control" id="noteContent" rows="3" placeholder="Note content..."></textarea>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <label class="form-label">Category</label>
                                    <select class="form-select" id="noteCategory">
                                        <option value="General">General</option>
                                        <option value="Warning">Warning</option>
                                        <option value="Important">Important</option>
                                        <option value="Follow-up">Follow-up</option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Priority</label>
                                    <select class="form-select" id="notePriority">
                                        <option value="1">Low</option>
                                        <option value="3" selected>Medium</option>
                                        <option value="5">High</option>
                                    </select>
                                </div>
                            </div>
                            <div class="mb-3 mt-3">
                                <label class="form-label">Due Date</label>
                                <input type="date" class="form-control" id="noteDueDate">
                            </div>
                            <button class="btn btn-primary" onclick="addNote()">Create Note</button>
                        </div>
                    </div>

                    <div id="notesList"></div>
                </div>

                <div class="col-md-4">
                    <div class="card mb-3">
                        <div class="card-header bg-warning text-white">
                            <h5 class="mb-0">Pending Notes</h5>
                        </div>
                        <div class="card-body" id="pendingNotes"></div>
                    </div>

                    <div class="card">
                        <div class="card-header bg-danger text-white">
                            <h5 class="mb-0">Overdue Notes</h5>
                        </div>
                        <div class="card-body" id="overdueNotes"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let entityType = 'NFT'; // Get from page context
        let entityId = 1; // Get from page context

        $(document).ready(function() {
            loadComments();
            loadNotes();
            loadPendingNotes();
            loadOverdueNotes();
        });

        function addComment() {
            const content = $('#commentContent').val();
            if (!content) {
                alert('Please enter a comment');
                return;
            }

            const comment = {
                entityType: entityType,
                entityId: entityId,
                content: content,
                authorAddress: 'user_address',
                authorName: 'Current User'
            };

            $.ajax({
                url: '/api/comment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(comment),
                success: function() {
                    $('#commentContent').val('');
                    loadComments();
                }
            });
        }

        function loadComments() {
            $.get(`/api/comment/${entityType}/${entityId}`, function(data) {
                let html = '';
                data.forEach(comment => {
                    html += `
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <h6 class="card-title">${comment.authorName}</h6>
                                        <p class="card-text">${comment.content}</p>
                                        <small class="text-muted">${new Date(comment.createdDate).toLocaleString()}</small>
                                        ${comment.isEdited ? '<small class="text-muted ms-2">(edited)</small>' : ''}
                                    </div>
                                    <div>
                                        <button class="btn btn-sm btn-outline-primary" onclick="likeComment(${comment.id})">
                                            <i class="fas fa-thumbs-up"></i> ${comment.likeCount}
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                });
                $('#commentsList').html(html);
                $('#totalComments').text(data.length);
            });
        }

        function likeComment(commentId) {
            $.post(`/api/comment/${commentId}/like?userAddress=user_address`, function() {
                loadComments();
            });
        }

        function addNote() {
            const note = {
                entityType: entityType,
                entityId: entityId,
                title: $('#noteTitle').val(),
                content: $('#noteContent').val(),
                category: $('#noteCategory').val(),
                priority: parseInt($('#notePriority').val()),
                dueDate: $('#noteDueDate').val() ? new Date($('#noteDueDate').val()) : null,
                createdBy: 'user_address',
                createdByName: 'Current User'
            };

            $.ajax({
                url: '/api/note',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(note),
                success: function() {
                    $('#noteTitle').val('');
                    $('#noteContent').val('');
                    $('#noteDueDate').val('');
                    loadNotes();
                    loadPendingNotes();
                }
            });
        }

        function loadNotes() {
            $.get(`/api/note/${entityType}/${entityId}`, function(data) {
                let html = '';
                data.forEach(note => {
                    const categoryBadge = note.category === 'Important' ? 'danger' : note.category === 'Warning' ? 'warning' : 'info';
                    html += `
                        <div class="card mb-3 border-${categoryBadge}">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h6 class="card-title">${note.title}</h6>
                                        <p class="card-text">${note.content}</p>
                                        <small class="text-muted">By ${note.createdByName} on ${new Date(note.createdDate).toLocaleDateString()}</small>
                                    </div>
                                    <div>
                                        <span class="badge bg-${categoryBadge}">${note.category}</span>
                                        ${note.dueDate ? `<small class="d-block mt-2">Due: ${new Date(note.dueDate).toLocaleDateString()}</small>` : ''}
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                });
                $('#notesList').html(html);
            });
        }

        function loadPendingNotes() {
            $.get('/api/note/pending', function(data) {
                let html = '';
                data.forEach(note => {
                    html += `<div class="mb-2"><strong>${note.title}</strong><br><small>${note.content.substring(0, 50)}...</small></div>`;
                });
                $('#pendingNotes').html(html || '<p class="text-muted">No pending notes</p>');
            });
        }

        function loadOverdueNotes() {
            $.get('/api/note/overdue', function(data) {
                let html = '';
                data.forEach(note => {
                    html += `<div class="mb-2"><strong class="text-danger">${note.title}</strong><br><small>Due: ${new Date(note.dueDate).toLocaleDateString()}</small></div>`;
                });
                $('#overdueNotes').html(html || '<p class="text-muted">No overdue notes</p>');
            });
        }
    </script>
}
