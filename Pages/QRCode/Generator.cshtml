@page
@model QRCodeGeneratorModel
@{
    ViewData["Title"] = "QR Code Generator";
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-md-12">
            <h1 class="mb-4">QR Code & Barcode Generator</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Generate Codes</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Select NFT</label>
                        <select class="form-select" id="nftSelect">
                            <option value="">Choose an NFT...</option>
                        </select>
                    </div>
                    <button class="btn btn-primary w-100 mb-2" onclick="generateQRCode()">Generate QR Code</button>
                    <button class="btn btn-success w-100 mb-2" onclick="generateBarcode()">Generate Barcode</button>
                    <button class="btn btn-info w-100" onclick="downloadCode()">Download</button>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Preview</h5>
                </div>
                <div class="card-body text-center">
                    <div id="codePreview" style="min-height: 300px; display: flex; align-items: center; justify-content: center;">
                        <p class="text-muted">Generate a code to preview</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Batch Print</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label">Select NFTs for Printing</label>
                        <div id="nftCheckboxes" style="max-height: 300px; overflow-y: auto;"></div>
                    </div>
                    <button class="btn btn-primary" onclick="generatePrintSheet()">Generate Print Sheet</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentQRCodeId = null;

        $(document).ready(function() {
            loadNFTs();
        });

        function loadNFTs() {
            $.get('/api/nft', function(data) {
                let selectHtml = '<option value="">Choose an NFT...</option>';
                let checkboxHtml = '';
                data.forEach(nft => {
                    selectHtml += `<option value="${nft.id}">${nft.productName} (${nft.batchId})</option>`;
                    checkboxHtml += `<div class="form-check"><input class="form-check-input nft-checkbox" type="checkbox" value="${nft.id}" id="nft${nft.id}"><label class="form-check-label" for="nft${nft.id}">${nft.productName} - ${nft.batchId}</label></div>`;
                });
                $('#nftSelect').html(selectHtml);
                $('#nftCheckboxes').html(checkboxHtml);
            });
        }

        function generateQRCode() {
            const nftId = $('#nftSelect').val();
            if (!nftId) {
                alert('Please select an NFT');
                return;
            }

            $.post(`/api/qrcode/generate/${nftId}`, function(qrCode) {
                currentQRCodeId = qrCode.id;
                $('#codePreview').html(`<img src="${qrCode.qrCodeImageUrl}" style="max-width: 300px; max-height: 300px;">`);
            });
        }

        function generateBarcode() {
            const nftId = $('#nftSelect').val();
            if (!nftId) {
                alert('Please select an NFT');
                return;
            }

            $.post(`/api/qrcode/barcode/${nftId}`, function(barcode) {
                currentQRCodeId = barcode.id;
                $('#codePreview').html(`<img src="${barcode.barcodeImageUrl}" style="max-width: 300px; max-height: 300px;">`);
            });
        }

        function downloadCode() {
            if (!currentQRCodeId) {
                alert('Please generate a code first');
                return;
            }

            window.location.href = `/api/qrcode/${currentQRCodeId}/download`;
        }

        function generatePrintSheet() {
            const selectedNFTs = $('.nft-checkbox:checked').map(function() {
                return $(this).val();
            }).get();

            if (selectedNFTs.length === 0) {
                alert('Please select at least one NFT');
                return;
            }

            $.ajax({
                url: '/api/qrcode/print',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(selectedNFTs),
                xhrFields: {
                    responseType: 'blob'
                },
                success: function(data) {
                    const url = window.URL.createObjectURL(data);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'qr-codes.pdf';
                    a.click();
                }
            });
        }
    </script>
}
