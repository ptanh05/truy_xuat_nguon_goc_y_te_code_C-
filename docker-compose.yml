version: '3.8'

services:
  pharmadna-web:
    build: .
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DATABASE_URL=postgresql://pharmadna:password@postgres:5432/pharmadna
      - PINATA_JWT=${PINATA_JWT}
      - PINATA_GATEWAY=${PINATA_GATEWAY:-https://gateway.pinata.cloud/ipfs/}
      - PHARMADNA_RPC=${PHARMADNA_RPC}
      - PHARMA_NFT_ADDRESS=${PHARMA_NFT_ADDRESS}
      - OWNER_PRIVATE_KEY=${OWNER_PRIVATE_KEY}
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_SMTP_USER=${EMAIL_SMTP_USER}
      - EMAIL_SMTP_PASS=${EMAIL_SMTP_PASS}
      - CACHE_DEFAULT_EXPIRATION_MINUTES=${CACHE_DEFAULT_EXPIRATION_MINUTES:-30}
    depends_on:
      - postgres
    volumes:
      - ./PharmaDNA.Web/wwwroot:/app/wwwroot
    networks:
      - pharmadna-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=pharmadna
      - POSTGRES_USER=pharmadna
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./PharmaDNA.Web/Database/init_database.sql:/docker-entrypoint-initdb.d/init_database.sql
    networks:
      - pharmadna-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pharmadna-network

volumes:
  postgres_data:
  redis_data:

networks:
  pharmadna-network:
    driver: bridge
