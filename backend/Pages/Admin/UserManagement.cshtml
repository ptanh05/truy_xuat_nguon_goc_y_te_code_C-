@page
@model UserManagementModel
@{
    ViewData["Title"] = "User Management";
}

<div class="container-fluid mt-4">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1>User Management</h1>
        </div>
        <div class="col-md-4 text-end">
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createUserModal">
                <i class="fas fa-plus"></i> Create User
            </button>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card">
        <div class="card-header">
            <h5>Users List</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Email</th>
                            <th>Full Name</th>
                            <th>Company</th>
                            <th>Roles</th>
                            <th>Status</th>
                            <th>Created</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="usersTableBody">
                        <!-- Populated by JavaScript -->
                    </tbody>
                </table>
            </div>
            <nav>
                <ul class="pagination" id="pagination">
                    <!-- Populated by JavaScript -->
                </ul>
            </nav>
        </div>
    </div>

    <!-- Roles Management -->
    <div class="card mt-4">
        <div class="card-header">
            <div class="row">
                <div class="col-md-8">
                    <h5>Roles Management</h5>
                </div>
                <div class="col-md-4 text-end">
                    <button class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#createRoleModal">
                        <i class="fas fa-plus"></i> Create Role
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row" id="rolesContainer">
                <!-- Populated by JavaScript -->
            </div>
        </div>
    </div>
</div>

<!-- Create User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createUserForm">
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="userEmail" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Full Name</label>
                        <input type="text" class="form-control" id="userFullName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" class="form-control" id="userPassword" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone Number</label>
                        <input type="tel" class="form-control" id="userPhone">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Company Name</label>
                        <input type="text" class="form-control" id="userCompany">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="createUser()">Create User</button>
            </div>
        </div>
    </div>
</div>

<!-- Create Role Modal -->
<div class="modal fade" id="createRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Role</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createRoleForm">
                    <div class="mb-3">
                        <label class="form-label">Role Name</label>
                        <input type="text" class="form-control" id="roleName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" id="roleDescription" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="createRole()">Create Role</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;
        const pageSize = 10;

        async function loadUsers(page = 1) {
            try {
                const response = await fetch(`/api/usermanagement/users?pageNumber=${page}&pageSize=${pageSize}`);
                const users = await response.json();
                
                const tbody = document.getElementById('usersTableBody');
                tbody.innerHTML = '';

                users.forEach(user => {
                    const row = `
                        <tr>
                            <td>${user.id}</td>
                            <td>${user.email}</td>
                            <td>${user.fullName}</td>
                            <td>${user.companyName || '-'}</td>
                            <td>
                                <span class="badge bg-info">${user.userRoles?.length || 0} roles</span>
                            </td>
                            <td>
                                <span class="badge ${user.isActive ? 'bg-success' : 'bg-danger'}">
                                    ${user.isActive ? 'Active' : 'Inactive'}
                                </span>
                            </td>
                            <td>${new Date(user.createdAt).toLocaleDateString()}</td>
                            <td>
                                <button class="btn btn-sm btn-info" onclick="editUser(${user.id})">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-warning" onclick="manageRoles(${user.id})">
                                    <i class="fas fa-key"></i>
                                </button>
                                <button class="btn btn-sm btn-danger" onclick="deleteUser(${user.id})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    `;
                    tbody.innerHTML += row;
                });

                currentPage = page;
            } catch (error) {
                console.error('Error loading users:', error);
                alert('Failed to load users');
            }
        }

        async function loadRoles() {
            try {
                const response = await fetch('/api/usermanagement/roles');
                const roles = await response.json();
                
                const container = document.getElementById('rolesContainer');
                container.innerHTML = '';

                roles.forEach(role => {
                    const card = `
                        <div class="col-md-6 mb-3">
                            <div class="card">
                                <div class="card-body">
                                    <h6 class="card-title">${role.name}</h6>
                                    <p class="card-text small">${role.description || 'No description'}</p>
                                    <div class="d-flex gap-2">
                                        <button class="btn btn-sm btn-primary" onclick="editRole(${role.id})">
                                            <i class="fas fa-edit"></i> Edit
                                        </button>
                                        <button class="btn btn-sm btn-danger" onclick="deleteRole(${role.id})">
                                            <i class="fas fa-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    container.innerHTML += card;
                });
            } catch (error) {
                console.error('Error loading roles:', error);
            }
        }

        async function createUser() {
            const email = document.getElementById('userEmail').value;
            const fullName = document.getElementById('userFullName').value;
            const password = document.getElementById('userPassword').value;
            const phone = document.getElementById('userPhone').value;
            const company = document.getElementById('userCompany').value;

            try {
                const response = await fetch('/api/usermanagement/users', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        email, fullName, password, phoneNumber: phone, companyName: company
                    })
                });

                if (response.ok) {
                    alert('User created successfully');
                    document.getElementById('createUserForm').reset();
                    bootstrap.Modal.getInstance(document.getElementById('createUserModal')).hide();
                    loadUsers();
                }
            } catch (error) {
                console.error('Error creating user:', error);
                alert('Failed to create user');
            }
        }

        async function createRole() {
            const name = document.getElementById('roleName').value;
            const description = document.getElementById('roleDescription').value;

            try {
                const response = await fetch('/api/usermanagement/roles', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ name, description })
                });

                if (response.ok) {
                    alert('Role created successfully');
                    document.getElementById('createRoleForm').reset();
                    bootstrap.Modal.getInstance(document.getElementById('createRoleModal')).hide();
                    loadRoles();
                }
            } catch (error) {
                console.error('Error creating role:', error);
                alert('Failed to create role');
            }
        }

        async function deleteUser(userId) {
            if (!confirm('Are you sure you want to delete this user?')) return;

            try {
                const response = await fetch(`/api/usermanagement/users/${userId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    alert('User deleted successfully');
                    loadUsers();
                }
            } catch (error) {
                console.error('Error deleting user:', error);
                alert('Failed to delete user');
            }
        }

        function editUser(userId) {
            alert('Edit user functionality coming soon');
        }

        function manageRoles(userId) {
            alert('Manage roles functionality coming soon');
        }

        function editRole(roleId) {
            alert('Edit role functionality coming soon');
        }

        function deleteRole(roleId) {
            if (!confirm('Are you sure you want to delete this role?')) return;
            alert('Delete role functionality coming soon');
        }

        // Load data on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadUsers();
            loadRoles();
        });
    </script>
}
